
<RadzenFieldset Text="Productos">
    @foreach (var orderDetail in OrderDetailViewModels)
    {
        <OrderDetailItem OrderDetailViewModel="orderDetail" OnRemoveOrderDetail="RemoveItem" />
    }
    <RadzenButton Click="SearchProduct" Text="Añadir" ButtonStyle="ButtonStyle.Info" ButtonType="ButtonType.Button" />
</RadzenFieldset>

@code {

    [Parameter]
    public ICollection<OrderDetailViewModel> OrderDetailViewModels { get; set; } = new List<OrderDetailViewModel>();

    [Inject]
    private DialogService DialogService { get; set; } = default!;
    private int count;

    private async Task SearchProduct()
    {
        await DialogService.OpenAsync<SearchProductDialog>("Buscar producto", new Dictionary<string, object>
        {
            {"OnProductSelected", ProductSelected}
        },
            new DialogOptions { Width = "90%", Height = "570px", Resizable = true, Draggable = true });
    }

    private EventCallback ProductSelected => new(this, (Func<ProductViewModel, Task>)(async product =>
    {
        await UpdateProduct(product);
    }));

    private Task UpdateProduct(ProductViewModel product)
    {
        this.OrderDetailViewModels.Add(new OrderDetailViewModel
            {
                Name = $"{product.Vendor} {product.Name} {product.Measures}",
                Price = product.Price,
                ProductCode = product.ProductCode
            });

        return Task.CompletedTask;
    }

    private void RemoveItem(int productCode)
    {
        this.OrderDetailViewModels.Remove(this.OrderDetailViewModels.First(x => x.ProductCode == productCode));
    }
}
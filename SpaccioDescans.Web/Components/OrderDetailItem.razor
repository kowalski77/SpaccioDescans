<div class="row">
    <div class="col-md-2">
        <RadzenNumeric TValue="int" Step="1" style="width: 20%;" Name="Cantidad" @bind-Value="OrderDetailViewModel.Quantity" />
    </div>
    <div class="col-4">
        <RadzenTextBox style="width: 100%;" Placeholder="Producto" @bind-Value="OrderDetailViewModel.Name" ReadOnly="true"/>
    </div>
    <div class="col-md-1">
        <RadzenNumeric TValue="decimal" style="width: 100%;" @bind-Value="OrderDetailViewModel.Price" ShowUpDown="false" ReadOnly="true" />
    </div>
    <div class="col-md-2">
        <RadzenNumeric TValue="decimal" style="width: 20%;" Name="Descuento" @bind-Value="OrderDetailViewModel.Discount" />
    </div>
    <div class="align-items-center d-flex col-md-2">
        <RadzenButton ButtonStyle="ButtonStyle.Light" Icon="cancel" style="display: inline-block; margin-left: 10px;" Click="@RemoveProduct" ButtonType="ButtonType.Button" />
    </div>
</div>

@code {

    [Parameter]
    public OrderDetailViewModel OrderDetailViewModel { get; set; } = new();

    [Parameter]
    public EventCallback<int> OnRemoveOrderDetail { get; set; }

    [Inject]
    private DialogService DialogService { get; set; } = default!;

    private async Task RemoveProduct()
    {
        await this.OnRemoveOrderDetail.InvokeAsync(this.OrderDetailViewModel.Order);
    }
}
@using Syncfusion.Blazor.Inputs

<div class="row">
    <div class="col-sm-6 col-lg-6 col-md-6">
        <label class="spaccio-label">Cantidad</label>
        <SfNumericTextBox TValue="decimal" Format="c2" Value="@this.OrderDetailViewModel.Quantity" Change="OnQuantityUpdated"  />
    </div>
    <div class="col-sm-6 col-lg-6 col-md-6">
        <label class="spaccio-label">Producto</label>
        <SfTextBox Placeholder="NIF" FloatLabelType="@FloatLabelType.Auto" @bind-Value="@this.OrderDetailViewModel.Name" />
    </div>
    <div class="col-sm-6 col-lg-6 col-md-6">
        <label class="spaccio-label">Precio</label>
        <SfNumericTextBox TValue="decimal" Format="c2" Value="@this.OrderDetailViewModel.Price" Readonly="true" ShowSpinButton="false"  />
    </div>
    <div class="col-sm-6 col-lg-6 col-md-6">
        <label class="spaccio-label">Descuento</label>
        <SfNumericTextBox TValue="decimal" Format="c2" Value="@this.OrderDetailViewModel.Discount" Change="OnDiscountUpdated"  />
    </div>
    <div class="col-sm-6 col-lg-6 col-md-6">
        <label class="spaccio-label">Total</label>
        <SfNumericTextBox TValue="decimal" Format="c2" Value="@this.OrderDetailViewModel.Total" Readonly="true" ShowSpinButton="false"  />
    </div>
    <div class="col-sm-6 col-lg-6 col-md-6">
        <label class="spaccio-label">Total</label>
        <SfButton CssClass="e-danger" @onclick="@this.RemoveProduct">Danger</SfButton>
    </div>
</div>

@code {

    [Parameter]
    public OrderDetailViewModel OrderDetailViewModel { get; set; } = new();

    [Parameter]
    public EventCallback<long> OnRemoveOrderDetail { get; set; }

    [Parameter]
    public EventCallback OnOrderDetailUpdated { get; set; }

    private async Task RemoveProduct()
    {
        await this.OnRemoveOrderDetail.InvokeAsync(this.OrderDetailViewModel.ProductId);
    }

    private async Task OnQuantityUpdated(int quantity)
    {
        this.OrderDetailViewModel.Quantity = quantity;
        await this.OnOrderDetailUpdated.InvokeAsync();
    }

    private async Task OnDiscountUpdated(decimal discount)
    {
        this.OrderDetailViewModel.Discount = discount;
        await this.OnOrderDetailUpdated.InvokeAsync();
    }
}